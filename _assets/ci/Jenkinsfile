pipeline {
  agent { label 'linux' }

  options {
    /* manage how many builds we keep */
    buildDiscarder(logRotator(
      numToKeepStr: '20',
      daysToKeepStr: '30',
    ))
    disableConcurrentBuilds()
    /* Go requires a certain directory structure */
    checkoutToSubdirectory('src/github.com/status-im/keycard-cli')
  }

  environment {
    PROJECT = "${env.WORKSPACE}/src/github.com/status-im/keycard-cli"
    GOPATH  = "${env.WORKSPACE}"
    PATH    = "${env.PATH}:${env.GOPATH}/bin"
  }

  stages {
    stage('Prep') {
      steps { dir(PROJECT) {
        sh 'make deps'
      } }
    }

    stage('Test') {
      agent {
        docker { 
          label 'linux'
          image 'statusteam/keycard-cli-ci:latest'
          args '--entrypoint=""' /* allows jenkins use cat */
        }
      }
      environment {
        GOCACHE = "off"
        GOPATH  = "${env.WORKSPACE}"
        PATH    = "${env.PATH}:${env.GOPATH}/bin"
      }
      options {
        checkoutToSubdirectory('src/github.com/status-im/keycard-cli')
      }
      steps { dir(PROJECT) {
        sh 'make test'
      } }
    }

    stage('Build') {
      steps { script { dir(PROJECT) {
        sh 'make build-platforms'
      } } }
    }

    stage('Archive') {
      steps { dir(PROJECT) {
        archiveArtifacts('build/bin/*')
      } }
    }

    stage('Release') {
      steps { dir(PROJECT) {
        withCredentials([usernamePassword(
          credentialsId:  'status-im-auto',
          usernameVariable: 'GITHUB_USER_NAME',
          passwordVariable: 'GITHUB_TOKEN'
        )]) {
          sh 'make release'
        }
      } }
    }
  }
  post {
    always { 
      script {
        /* in docker because binaries are owned by root */
        docker.image('statusteam/keycard-cli-ci:latest').inside("--entrypoint='' -u 0:0") {
          dir (PROJECT) {
            sh 'make clean'
          }
        }
      }
    }
  }
}
